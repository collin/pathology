require "rake-pipeline-web-filters"
require "json"
# require "uglifier"


class PathologyDocumentFilter < Rake::Pipeline::Filter
  #  NOW WE HAVE TWO PROBLEMS
  # this splits methods/documentation into two groups
  # we'll flip the order four the output
  DOC_FILTER = /((?:[ ]+#.+doc[ =].+\n)(?:[ ]+#.*\n)+)/
  def generate_output(inputs, output)
    inputs.each do |input|
      result = File.read(input.fullpath)
      result.gsub!(DOC_FILTER) do |match|
        $1.gsub!(/[ ]+(#)/) {|match| " " * (match.length - 2) }
      end
      output.write result
    end
  end
end

output "dist"
input "lib" do
  match "**/*.js" do
    minispade rewrite_requires: true, string: true, module_id_generator: proc { |input|
     id = input.path.dup
      id.sub!('/lib/', '/')
      id.sub!(/\.js$/, '')
      id
    }

    concat "Pathology-spade.js"
  end
end

input "./src" do
  match "**/*.coffee" do
    filter PathologyDocumentFilter
    filter Rake::Pipeline::Web::Filters::CoffeeScriptFilter

    minispade rewrite_requires: true, string: true, module_id_generator: proc { |input|
     id = input.path.dup
      id.sub!('/lib/', '/')
      id.sub!(/\.js$/, '')
      id.sub!(/\/main$/, '')
      id
    }

    concat "Pathology-docs-spade.js"
  end
end

input "./test", "pathology.coffee" do
  coffee_script
  concat "Pathology-test.js"
end

output "test"
input "vendor" do
  match "underscore.js" do
    minispade module_id_generator: proc{ "underscore" }
    concat "underscore-spade.js"
  end
end
